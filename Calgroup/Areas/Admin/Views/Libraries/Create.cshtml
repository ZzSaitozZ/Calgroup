@model Model.EF.Library

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>
        Bản quản lý
        <small>@Session["fullName"] - Member since - @Convert.ToDateTime(Session["createdDate"].ToString()).ToShortDateString()</small>
    </h1>
    <ol class="breadcrumb">
        <li class="active"><i class="fa fa-dashboard"></i> @(Convert.ToInt32(Session["isAdmin"].ToString()) == 1 ? "Quản trị viên" : "Thành viên")</li>
    </ol>
</section>

<section class="content">
    <!-- COLOR PALETTE -->
    <div class="box box-default color-palette-box">
        <div class="box-header with-border">
            <h3 class="box-title">
                <i class="fa fa-tag"></i> Thêm mới
            </h3>
        </div>
        <br />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        <div id="content"></div>
                        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control textbox-control hidden" } })
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        <input class="btn btn-default" id="Browse" value="Chọn ảnh" />
                    </div>
                    <script>
                        $("#Browse").click(function () {
                            var finder = new CKFinder();
                            finder.selectActionFunction = function (fileUrl) {
                                //Lấy file ảnh cuối cùng
                                //fileUrl = fileUrl.substring(fileUrl.lastIndexOf("/") + 1);
                                $("#Image").val(fileUrl);
                                document.getElementById("content").innerHTML = '<img style="width:200px;height:100px" type="type/html" src="' + fileUrl + '" ></img>';
                            };
                            finder.popup();
                        });
                    </script>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PDF, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.PDF, new { htmlAttributes = new { @class = "form-control textbox-control" } })
                        @Html.ValidationMessageFor(model => model.PDF, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        <input class="btn btn-default" id="Browse2" value="Chọn file" />
                    </div>
                    <script>
                        $("#Browse2").click(function () {
                            var finder = new CKFinder();
                            finder.selectActionFunction = function (fileUrl) {
                                //Lấy file ảnh cuối cùng
                                //fileUrl = fileUrl.substring(fileUrl.lastIndexOf("/") + 1);
                                $("#PDF").val(fileUrl);

                            };
                            finder.popup();
                        });
                    </script>
                </div>

                <div class="form-group hidden">
                    @Html.LabelFor(model => model.AliasName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AliasName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AliasName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Status, new { @class = "checkbox" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IDCategory, "IDCategory", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("IDCategory", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IDCategory, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                        <p class="btn btn-default">@Html.ActionLink("Cancel", "Index")</p>
                    </div>
                </div>
            </div>
        }
        <br /><br />
    </div>
</section>
<script>
    var viewModel = {
        stringValue: ko.observable(""),
    };
    ko.applyBindings(viewModel);
</script>

